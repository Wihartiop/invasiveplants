{"version":3,"sources":["context/Auth.js","components/Header.jsx","constants/ApiUrl.js","components/HomeCard.jsx","components/LoadingScreen.jsx","views/Home.jsx","components/Login.jsx","components/TableRow.jsx","constants/DisplayProps.js","components/AlertDialog.jsx","components/ImageContainer.jsx","components/Slideshow.jsx","components/DetailCard.jsx","views/Detail.jsx","components/EditTableRow.jsx","constants/EmptyGulma.js","context/DropBox.js","views/EditGulma.jsx","views/Overview.jsx","views/KataPengantar.jsx","views/LandingPage.jsx","components/Footer.jsx","context/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","Header","authTokens","Navbar","className","bg","text-variant","style","padding","Nav","to","Link","ApiUrl","HomeCard","props","plantName","plantname","useState","path","setPath","title","setTitle","mounted","setMounted","useEffect","fetch","headers","then","res","json","data","Images","catch","error","console","log","imageContent","effect","src","Spinner","animation","role","margin","Col","xs","Card","Title","Body","LoadingScreen","Row","Home","names","setNames","length","map","name","Login","isLoggedIn","setLoggedIn","isError","setIsError","password","setPassword","setAuthTokens","type","value","onChange","e","target","placeholder","onClick","backgroundColor","TableRow","styles","tableRow","rightCol","leftCol","display","flexDirection","width","textAlign","paddingRight","paddingLeft","DisplayProps","NamaLokal","Sinonim","Biologi","Morfologi","Pemanfaatan","Pengendalian","Permasalahan","TinjaunanUmum","AlertDialog","Modal","show","size","aria-labelledby","centered","closeButton","Footer","Button","onAbort","variant","onConfirm","ImageContainer","openImageDialog","setOpenImageDialog","edit","onDelete","Image","source","text","Slideshow","dots","adjustHeight","infinite","speed","slidesToShow","slidesToScroll","images","image","index","description","descriptions","gulma","ImageDescriptions","Object","keys","prop","Url","Detail","useParams","setGulma","content","rows","includes","match","Form","Group","controlId","Label","Control","as","onchange","emptyGulma","token","EditGulma","create","setCreate","redirect","setRedirect","openDialog","setOpenDialog","changeHandler","event","newGulma","JSON","parse","stringify","id","replace","handleSubmit","method","body","join","filter","idx","deleteImage","changeImageDesc","for","file","document","getElementById","files","dbxHeader","axios","url","response","push","err","accept","Overview","KataPengantar","LandingPage","alt","PrivateRoute","Component","component","rest","render","pathname","state","referer","location","App","existingTokens","localStorage","getItem","Provider","setItem","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.379b5cf2.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useAuth} from '../context/Auth'\r\n\r\nexport default function Header(){\r\n\r\n    const { authTokens } = useAuth();\r\n\r\n    return ( \r\n        <Navbar className=\"navbar\" bg=\"success\" text-variant=\"warning\" style={{padding: '0 3rem'}}>\r\n            <Nav>\r\n                <LinkContainer to={\"/home\"} className=\"link\">\r\n                    <Nav.Link>Home</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to={\"/kataPengantar\"} className=\"link\">\r\n                    <Nav.Link>Kata Pengantar</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to={\"/overview\"} className=\"link\">\r\n                    <Nav.Link>Overview</Nav.Link>\r\n                </LinkContainer>\r\n                {authTokens \r\n                    ? (<LinkContainer to={'/edit/new'} className=\"link create-new\">\r\n                        <Nav.Link>Create new Gulma</Nav.Link>\r\n                        </LinkContainer>)\r\n                    : (<LinkContainer to={'/login'} className=\"link create-new\">\r\n                        <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>)}\r\n            </Nav>    \r\n        </Navbar>\r\n        \r\n    )\r\n}","export const ApiUrl =  process.env.NODE_ENV === 'production' ? \"https://bukugulma.herokuapp.com\" : \"http://localhost:5000\";","import React, {useState, useEffect} from 'react';\r\nimport { Spinner, Card, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {LazyLoadImage} from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\nimport {ApiUrl} from '../constants/ApiUrl';\r\n\r\n\r\nexport default function HomeCard(props){\r\n\r\n    var plantName = props.plantname;\r\n\r\n    const [path, setPath] = useState();\r\n    const [title, setTitle] = useState();\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            fetch( `${ApiUrl}/gulma/${plantName}`, {headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      }})\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setTitle(data['LatinName']);\r\n            setPath(data.Images[0])\r\n            //const b64 = new Buffer(image.data).toString('base64')\r\n            //setPath(`data:${image.contentType};base64,${b64}`);\r\n        })\r\n        .catch(error => console.log(error));\r\n        }\r\n        return ()=>setMounted(true)\r\n    }, [plantName, mounted])\r\n\r\n    var imageContent = path \r\n    ? <LazyLoadImage effect=\"blur\" className=\"home-card-image\" src={path}/> \r\n    : <Spinner animation=\"border\" role=\"status\" style={{margin: 'auto'}}/>\r\n\r\n    return(<Col xs={3} >\r\n            <LinkContainer to={'/'+plantName}>\r\n            <Card className=\"container home-card link\">\r\n                <Card.Title className=\"home-card-title\">{title}</Card.Title>\r\n                <Card.Body style={{padding: 0}}>\r\n                    {imageContent}\r\n                </Card.Body>\r\n            </Card>\r\n            </LinkContainer> \r\n    </Col>)\r\n}","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nexport default function LoadingScreen(){\r\n    return (<div>\r\n        <Row className=\"loading-row\">\r\n            <div className=\"loading-container\">\r\n            Loading...\r\n            </div>\r\n        </Row>\r\n        </div>)\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport HomeCard from '../components/HomeCard';\r\nimport LoadingScreen from '../components/LoadingScreen';\r\nimport {ApiUrl} from '../constants/ApiUrl';\r\n\r\nexport default function Home(){\r\n\r\n    const [names, setNames] = useState([]);\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!mounted){\r\n            fetch( `${ApiUrl}/gulmanames`, {headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n              }})\r\n                .then(res => res.json())\r\n                .then(data => setNames(data))\r\n                .catch(error => console.log(error));\r\n        }\r\n        return ()=>setMounted(true)\r\n    }, [mounted])\r\n    \r\n    if(names.length){\r\n        return (\r\n            <div>\r\n                <div className=\"container home-container\">\r\n                    {names.map(name => (<HomeCard plantname={name}/>))}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <LoadingScreen/>\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from \"../context/Auth\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthTokens } = useAuth();\r\n\r\n\r\n  function postLogin() {\r\n      if (password === 'Carbonara') {\r\n        setAuthTokens(true);\r\n        setLoggedIn(true);\r\n      } else {\r\n        setIsError(true);\r\n      }\r\n  }\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-card\">\r\n      <form className=\"login-form\">\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={e => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button className=\"btn btn-success\" onClick={postLogin}>Sign In</button>\r\n      </form>\r\n        { isError &&<div style={{backgroundColor: 'red'}}>The username or password provided were incorrect!</div> }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function TableRow(props){\r\n    return (<div style={styles.tableRow}>\r\n        <div style={styles.rightCol}>{props.name}:</div>\r\n        <div style={styles.leftCol}>{props.value}</div>\r\n    </div>) \r\n}\r\n\r\nconst styles ={\r\n    tableRow: {\r\n        padding: '20px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '80%'\r\n    },\r\n    rightCol: {\r\n        textAlign: 'right',\r\n        width: '30%',\r\n        paddingRight: 25\r\n    },\r\n    leftCol: {\r\n        textAlign: 'left',\r\n        width: '70%',\r\n        display: 'block',\r\n        paddingLeft: 25\r\n    }\r\n}","export const DisplayProps = {\r\n    NamaLokal: 'Nama lokal',\r\n    Sinonim: 'Sinonim',\r\n    Biologi: 'Biologi',\r\n    Morfologi: 'Morfologi', \r\n    Pemanfaatan: 'Pemanfaatan',\r\n    Pengendalian: 'Pengendalian', \r\n    Permasalahan: 'Permasalahan',\r\n    TinjaunanUmum: 'Tinjaunan umum',\r\n    }","import React from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nexport default function AlertDialog(props) { \r\n    return (\r\n    <Modal\r\n        show={props.show}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n    >\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <p>Are you sure you want to delete {props.name}?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={props.onAbort} variant=\"outline-danger\">Nah</Button>\r\n            <Button onClick={props.onConfirm} variant=\"danger\">Aye</Button>\r\n        </Modal.Footer>\r\n    </Modal>);}\r\n","import React, {useState} from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport AlertDialog from './AlertDialog'\r\n\r\n\r\nexport default function ImageContainer(props){\r\n\r\n    const [openImageDialog, setOpenImageDialog] = useState(false);\r\n\r\n    return (\r\n    <div className={props.edit ? \"image-container edit\" : \"image-container\"}>\r\n        <AlertDialog show={openImageDialog} \r\n        onConfirm={()=> {\r\n        if(props.onDelete){\r\n            props.onDelete();\r\n        }\r\n        setOpenImageDialog(false);\r\n        }} \r\n        onAbort={()=>setOpenImageDialog(false)} \r\n        name=\"this image\"/>\r\n        {props.edit && <a onClick={()=>setOpenImageDialog(true)}>&#10060;</a>}\r\n        <Image src={props.source} className=\"card-image\" />\r\n        <div className=\"image-desc\">\r\n            <em>{props.text}</em>\r\n        </div>\r\n    </div>\r\n)}","import \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport ImageContainer from './ImageContainer';\r\n\r\n\r\nexport default function Slideshow(props){\r\n\r\n  const settings = {\r\n    dots: false,\r\n    adjustHeight: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1\r\n  };\r\n    return (<Slider {...settings} className=\"detail-page-carousel\">\r\n            {props.images.map((image, index) => {\r\n                var description = props.descriptions[index] ?? '';\r\n                return <ImageContainer source={image} text={description} edit={false}/>\r\n            })}\r\n        </Slider>)\r\n}\r\n\r\n","import React from 'react';\r\nimport TableRow from './TableRow';\r\nimport {DisplayProps} from '../constants/DisplayProps'\r\nimport { Nav } from 'react-bootstrap';\r\nimport Slideshow from './Slideshow';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {useAuth} from '../context/Auth'\r\n\r\n\r\nexport default function Card(props){\r\n\r\n    var gulma = props.gulma;\r\n    const { authTokens } = useAuth();\r\n\r\n    return (\r\n        <div>\r\n        <h4 className=\"detail-header\">{gulma['LatinName']}</h4>\r\n        \r\n        <Slideshow images={gulma.Images} descriptions={gulma.ImageDescriptions}/>\r\n\r\n        {Object.keys(gulma).map(prop => DisplayProps[prop] ? <TableRow name={DisplayProps[prop]} value={gulma[prop]}/> : null)}\r\n        {authTokens && <LinkContainer to={'/edit/' + gulma.Url} className='link edit'>\r\n                    <Nav.Link>Edit Gulma</Nav.Link>\r\n                </LinkContainer>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport DetailCard from '../components/DetailCard';\r\nimport LoadingScreen from '../components/LoadingScreen';\r\nimport {ApiUrl} from '../constants/ApiUrl';\r\n\r\n\r\nexport default function Detail(props){\r\n\r\n    const plantName = useParams().plantname;\r\n\r\n    const [gulma, setGulma] = useState();\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            fetch( `${ApiUrl}/gulma/${plantName}`, {headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n              }})\r\n                .then(res => res.json())\r\n                .then(data => setGulma(data))\r\n                .catch(error => console.log(error));\r\n        }\r\n        return ()=>setMounted(true)\r\n        \r\n    }, [plantName, mounted])\r\n\r\n    \r\n    var content = gulma ? <DetailCard gulma={gulma}/> : <LoadingScreen/>\r\n\r\n    return (<div className=\"container\">\r\n        {content}\r\n    </div>)\r\n}\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function TableRow(props){\r\n\r\n    var rows = [\"Sinonim\",\"Nama Lokal\", \"Nama Latin\"].includes(props.name) || props.name.match(\"^Image\") ? 1 : 5 \r\n\r\n    return (\r\n        <Form.Group className=\"table-row\" controlId={props.name}>\r\n            <Form.Label className=\"right-col\">{props.name}</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={rows} className=\"left-col\" type=\"text\" value={props.value} onChange={props.onchange}/>\r\n        </Form.Group>) \r\n}","export const emptyGulma = {\r\n    \"LatinName\":\"\",\r\n    \"Sinonim\":\"\",\r\n    \"NamaLokal\":\"\",\r\n    \"Morfologi\":\"\",\r\n    \"Pengendalian\":\"\",\r\n    \"Biologi\": \"\",\r\n    \"Pemanfaatan\": \"\",\r\n    \"Permasalahan\": \"\",\r\n    \"TinjaunanUmum\": \"\",\r\n    \"Images\": [],\r\n    \"ImageDescriptions\": []\r\n}","export const token = 'sl.Ak7BI5vzHBkXpy-ju1ca5kNyZqz-r0793LBZyMxlYnsKAh9GI2eQ_EUa_hqEmnrD6c4Qn8i1zFBgwsDBQOFYQmMHP9-FD2Cm-a9-UfZDZAg4npXi7t6Tt14ksiwYFC02fM78K8bP'\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useParams, Redirect} from \"react-router-dom\";\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport EditTableRow from '../components/EditTableRow';\r\nimport AlertDialog from '../components/AlertDialog';\r\nimport {emptyGulma} from '../constants/EmptyGulma';\r\nimport fetch from 'node-fetch';\r\nimport axios from 'axios';\r\nimport ImageContainer from '../components/ImageContainer';\r\nimport {ApiUrl} from '../constants/ApiUrl';\r\nimport {token} from \"../context/DropBox\"\r\n\r\n\r\nexport default function EditGulma(){\r\n\r\n    const editProps = [\"NamaLokal\",\"Sinonim\",\"Biologi\",\"Morfologi\",\"Pemanfaatan\",\"Pengendalian\",\"Permasalahan\",\"TinjaunanUmum\"]\r\n\r\n    const plantName = useParams()?.plantname;\r\n\r\n    const [create, setCreate] = useState(plantName === null);\r\n    const [gulma, setGulma] = useState();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(create){\r\n            setGulma(emptyGulma);\r\n        } else {\r\n            fetch(`${ApiUrl}/gulmanames`, {headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            }})\r\n            .then(res=>res.json())\r\n            .then(data => {\r\n                if(data.includes(plantName)){\r\n                    setCreate(false);\r\n                    fetch( `${ApiUrl}/gulma/${plantName}`, {headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    }})\r\n                        .then(res => res.json())\r\n                        .then(data => setGulma(data))\r\n                        .catch(error => console.log(error));\r\n                } else {\r\n                    setCreate(true);\r\n                    setGulma(emptyGulma);\r\n                }\r\n            })\r\n        }\r\n    }, [plantName, create])\r\n\r\n    function changeHandler(event){\r\n        var newGulma = JSON.parse(JSON.stringify(gulma));\r\n        newGulma[event.target.id] = event.target.value;\r\n        newGulma[\"Url\"] = newGulma[\"LatinName\"].replace(\" \", \"\");\r\n        setGulma(newGulma);\r\n    }\r\n\r\n    function changeImageDesc(event, index){\r\n        var newGulma = JSON.parse(JSON.stringify(gulma));\r\n        newGulma[\"ImageDescriptions\"][index] = event.target.value;\r\n        setGulma(newGulma)\r\n    }\r\n\r\n    function handleSubmit(method){\r\n        fetch( `${ApiUrl}/gulma/${plantName}`, {\r\n        method: method,\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(gulma)})\r\n        .catch(error => console.log(error));\r\n        setRedirect(true);\r\n    }\r\n\r\n    function handleConfirm(){\r\n        setOpenDialog(false);\r\n        handleSubmit(\"DELETE\");\r\n    }\r\n\r\n    function handleAbort(){\r\n        setOpenDialog(false);\r\n    }\r\n\r\n    function onImageUpload(){\r\n        var file = document.getElementById('imageUpload').files[0];\r\n        var dbxHeader = {\r\n            'path' : `/${plantName}/${file.name}`\r\n        }\r\n        axios({\r\n            url: 'https://content.dropboxapi.com/2/files/upload',\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization' : 'Bearer ' + token,\r\n                'Content-Type': 'application/octet-stream',\r\n                'Dropbox-API-Arg': JSON.stringify(dbxHeader)\r\n            },\r\n            data: file\r\n        })\r\n        .then(()=> {\r\n            axios({\r\n                url: 'https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings',\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization' : 'Bearer ' + token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                data: {\r\n                    'path': `/${plantName}/${file.name}`\r\n                }\r\n            })\r\n            .then(response => {\r\n                var url = response.data.url.replace(\"dropbox\", \"dl.dropboxusercontent\").replace(\"?dl=0\", \"\");\r\n                console.log(url)\r\n                var newGulma = JSON.parse(JSON.stringify(gulma));\r\n                newGulma[\"Images\"].push(url);\r\n                newGulma[\"ImageDescriptions\"].push(\"\");\r\n                setGulma(newGulma)\r\n            })\r\n            .catch(error => console.log(error));\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n\r\nfunction deleteImage(index){\r\n    var newGulma = JSON.parse(JSON.stringify(gulma));\r\n    newGulma['Images'] = gulma['Images'].filter((image, idx) => idx !== index);\r\n    newGulma['ImageDescriptions'] = gulma['ImageDescriptions'].filter((image, idx) => idx !== index);\r\n    console.log(newGulma)\r\n    setGulma(newGulma)\r\n}\r\n\r\nif(redirect){\r\n    return <Redirect to='/'/>\r\n} else if(gulma){\r\n    return (<div className=\"container\">\r\n        <h4 className=\"edit-header\">{(create ? \"Create new gulma\" : `Edit ${gulma[\"LatinName\"]}`)}</h4>\r\n        <AlertDialog show={openDialog} onConfirm={handleConfirm} onAbort={handleAbort} name={gulma[\"LatinName\"]}/>\r\n        <Form >\r\n            {create && <EditTableRow name=\"Nama Latin\" value=\"\" onchange={changeHandler}/>}\r\n            {editProps.map(prop => <EditTableRow name={prop.match(/[A-Z][a-z]+/g).join(\" \")} value={gulma[prop]} onchange={changeHandler}/>)}\r\n            {gulma.Images.map((image, index) => {\r\n                return (<div>\r\n                    <ImageContainer source={image} edit={true} onDelete={()=>deleteImage(index)}/>\r\n                     <EditTableRow name={`Image description ${index+1}`} value={gulma.ImageDescriptions[index] ?? ''} onChange={(event) => changeImageDesc(event, index)}/>\r\n                </div>)\r\n            })}\r\n            <div> \r\n                <label for=\"imageUpload\" className=\"right-col\">Upload a new image:</label> <input type=\"file\" id=\"imageUpload\" className=\"btn btn-success\" onChange={onImageUpload} accept=\"image/png, image/jpeg\"/> \r\n            </div> \r\n            <div className=\"edit-buttons\">\r\n            <Button variant=\"danger\" type=\"button\" name=\"DELETE\" onClick={()=>setOpenDialog(true)}>Delete entry</Button>\r\n            <Button variant=\"success\" type=\"submit\" name=\"POST\" onClick={()=>handleSubmit(\"POST\")}>Submit</Button>\r\n            </div>\r\n        </Form>\r\n        </div>)   \r\n}\r\nelse {\r\n    return (<div>Wait a minute</div>);\r\n}   \r\n}","import React from 'react';\r\n\r\nexport default function Overview(){\r\n    return (\r\n<div className=\"pengantar\">\r\n    <h1>\r\n        Definisi, Klasifikasi dan Permasalahan Gulma\r\n    </h1>\r\n    <ol>\r\n        <li>\r\n            <h2>\r\n                Pengertian dan karakteristik gulma\r\n            </h2>\r\n            <p>\r\n                Pengertian tentang gulma sudah mulai dijabarkan sejak tahun 1912, namun hingga kini belum ada devinisi yang diterima secara universal oleh seluruh ilmuwan (Zimdahl, 2007). Gulma didefinisikan sebagai tanaman yang tumbuh pada tempat yang tidak diinginkan (Buchholtz, 1967) dan sejak saat itu definisi mengenai gulma terus berkembang. Aldrich (1984) dan Aldrich & Kremer (1997) menawarkan konsep ekologis yang mengubah sudut pandang manusia terhadap gulma dengan mendefinisikannya sebagai “tanaman yang berasal dari lingkungan alami yang berkembang dan berevolusi sebagai pengganggu tanaman budidaya dan aktivitas manusia sebagai bentuk adaptasi terhadap lingkungan alam”. Humburg pada tahun 1989 kemudian mendefinisikan gulma sebagai “tanaman yang bertentangan dengan aktivitas dan kesejahteraan manusia”. Dari pengertian-pengertian gulma yang telah dicetuskan, dapat dipahami secara umum bahwa gulma adalah tumbuhan yang keberadaannya tidak diinginkan. Di perkebunan kelapa sawit khususnya, gulma identik dengan tanaman pengganggu dan seringkali harus dikendalikan secara intensif. Sebagai tanaman pengganggu, gulma memiliki karakteristik tertentu yang pada umumnya dilihat dari kemampuan dan kebiasaan tumbuhnya pada areal yang terganggu, baik karena proses alami ataupun akibat campur tangan manusia. Baker (1965) menjabarkan bahwa gulma dapat memiliki satu atau lebih dari karakter berikut:\r\n            </p>\r\n            <ol type=\"a\">\r\n                <li>\r\n                    Memiliki kemampuan berkecambah dan reproduksi yang cepat,\r\n                </li>\r\n                <li>\r\n                Masa vegetatif yang singkat atau cepat mencapai fase produktif,\r\n                </li>\r\n                <li>\r\n                Dapat bereproduksi secara generatif maupun vegetatif,\r\n                </li>\r\n                <li>\r\n                Daya adaptasi kuat dengan rentang toleransi iklim yang lebar,\r\n                </li>\r\n                <li>\r\n                Umumnya bunga jantan dan betina bersifat self-compatible atau dapat menyerbuk sendiri,\r\n                </li>\r\n                <li>\r\n                Pada tumbuhan dengan penyerbukan silang, penyerbukan umumnya dibantu oleh angin atau serangga penyerbuk yang tidak spesifik,\r\n                </li>\r\n                <li>\r\n                Biji diproduksi sepanjang tahun dalam jumlah besar dengan morfologi yang memungkinkan penyebaran dalam jarak jauh, mampu berkecambah dengan cepat, dan dapat bertahan pada kondisi lingkungan ekstrim dengan berbagai tipe dormansi,\r\n                </li>\r\n                <li>\r\n                Seringkali menghasilkan biji dengan bentuk yang menyerupai tanaman budidaya sehingga sulit dibedakan,\r\n                </li>\r\n                <li>\r\n                Akar dan organ vegetatif lainnya tumbuh baik dengan cadangan makanan melimpah yang mendukung pertumbuhan pada cekaman lingkungan,\r\n                </li>\r\n                <li>\r\n                Organ vegetatif mampu tumbuh membentuk tumbuhan baru dengan cepat,\r\n                </li>\r\n                <li>\r\n                Memiliki kemampuan kompetisi yang kuat terhadap nutrisi, ruang, cahaya dan air,\r\n                </li>\r\n                <li>\r\n                Tahan terhadap herbisida.\r\n                </li>\r\n            </ol>\r\n        </li>\r\n        <li>\r\n            <h2>\r\n                Klasifikasi gulma kelapa sawit\r\n            </h2>\r\n            <p>\r\n                Pemahaman mengenai klasifikasi gulma penting untuk diketahui sebagai dasar pengendaliannya di lapangan. Dengan keanekaragamannya yang cukup besar dari segi morfologi, perawakan dan adaptasi terhadap lingkungan, maka dikenal beberapa kategori yang umum digunakan dalam klasifikasi gulma, diantaranya berdasarkan:\r\n            </p>\r\n            <ol>\r\n                <li>\r\n                    <h4>\r\n                        Daur hidup\r\n                    </h4>\r\n                    <p>\r\n                    Berdasarkan daur hidupnya gulma digolongkan menjadi:\r\n                    </p>\r\n                    <ol type=\"a\">\r\n                        <li>\r\n                        Gulma semusim (annual). Tumbuhan yang menyelesaikan daur hidupnya dalam satu musim atau tidak lebih dari satu tahun mulai dari kecambah, tumbuh dewasa, menghasilkan biji dan mati. Contoh: Ageratum conyzoides (babadotan),\r\n                        </li>\r\n                        <li>\r\n                        Gulma dua tahun (biannual). Tumbuhan yang menyelesaikan daur hidupnya dalam dua musim dan tidak lebih dari dua tahun. Pada tahun pertama umumnya dihabiskan untuk fase pertumbuhan vegetatif dan di tahun kedua tumbuhan mulai menghasilkan bunga, berbiji dan kemudian mati. Gulma jenis ini banyak dijumpai di daerah temperate. Contoh: Cyperus iria,\r\n                        </li>\r\n                        <li>\r\n                        Gulma tahunan (perennial). Tumbuhan yang hidup lebih dari dua tahun, termasuk kedalamnya adalah tumbuhan semak dan pohon. Tumbuhan yang memiliki rimpang, umbi, stolon atau kormus pada umumnya juga tergolong kedalam kelompok ini. Contoh: Chromolaena odorata (kirinyuh).\r\n                        </li>\r\n                    </ol>\r\n                </li>\r\n                <li>\r\n                    <h4>\r\n                        Habitat\r\n                    </h4>\r\n                    <p>\r\n                        Gulma dapat digolongkan berdasarkan habitat atau tempat hidupnya, yaitu:\r\n                    </p>\r\n                    <ol type=\"a\">\r\n                        <li>\r\n                            Gulma darat (terrestrial),\r\n                        </li>\r\n                        <li>\r\n                            Gulma pada ekosistem pertanian atau lahan budidaya (agrestal),\r\n                        </li>\r\n                        <li>\r\n                            Gulma pada lahan terlantar (ruderal). Termasuk diantaranya gulma di tepi jalan, sepanjang rel kereta api, dsb.,\r\n                        </li>\r\n                        <li>\r\n                            Gulma padang rumput (grassland), \r\n                        </li>\r\n                        <li>\r\n                            Gulma perairan (aquatic). Tumbuhan yang menyebabkan permasalahan dalam tata kelola air,\r\n                        </li>\r\n                        <li>\r\n                            Gulma perhutanan (forest), \r\n                        </li>\r\n                        <li>\r\n                            Gulma lingkungan (environment). Tumbuhan yang menginvasi lingkunan alami seperti hutan taman nasional, wilayah konservasi, dll.,\r\n                        </li>\r\n                        <li>\r\n                            Gulma epifit (epyphitic). Tumbuhan yang menumpang hidup pada vegetasi lain dengan memanfaatkan sisa-sisa bahan organik.\r\n                        </li>\r\n                        <li>\r\n                            Gulma parasit (parasitic). Tumbuhan yang hidup pada tumbuhan lain, seperti Cuscuta sp. (tali puteri).\r\n                        </li>\r\n                    </ol>\r\n                </li>\r\n                <li>\r\n                    <h4>\r\n                        Perawakan\r\n                    </h4>\r\n                    <p>\r\n                        Berdasarkan perawakannya gulma digolongkan menjadi:\r\n                    </p>\r\n                    <ol type=\"a\">\r\n                        <li>\r\n                            Herba (herb). Tumbuhan tidak berkayu atau sedikit berkayu di bagian batang bawah.\r\n                        </li>\r\n                        <li>\r\n                            Setengah perdu (subshrub). Umumnya perdu dengan bagian bawah batang berkayu, tetapi pada bagian atas menyerupai herba atau tidak berkayu.\r\n                        </li>\r\n                        <li>\r\n                            Perdu (shrub). Tumbuhan berkayu dengan banyak cabang dari bagian batang bawah, lebih dikenal dengan tumbuhan semak.\r\n                        </li>\r\n                        <li>\r\n                            Pohon (tree). Tumbuhan berkayu yang hidup tahunan.\r\n                        </li>\r\n                        <li>\r\n                            Sukulen. Tumbuhan dengan batang dan daun yang tebal, lunak dan berair.\r\n                        </li>\r\n                        <li>\r\n                            Pemanjat (climbing creeper, vine, liana). Tumbuhan pemanjat yang dapat berupa herba ataupun tumbuhan berkayu. Gulma jenis ini umumnya akan memanjat vegetasi lain untuk pertumbuhannya dengan menggunakan sulur, kait atau melilit vegetasi lain.\r\n                        </li>\r\n                    </ol>\r\n                </li>\r\n                <li>\r\n                    <h4>\r\n                        Jenis\r\n                    </h4>\r\n                    <p>\r\n                        Penggolongan gulma berdasarkan jenisnya merupakan penggolongan yang lebih praktis dan umum digunakan di Indonesia, termasuk di perkebunan kelapa sawit. Penggolongan berdasarkan jenis juga dapat menggambarkan kesamaan respon gulma terhadap paparan herbisida. Berdasarkan jenisnya, gulma dibagi menjadi:\r\n                    </p>\r\n                    <ol type=\"a\">\r\n                        <li>\r\n                            Gulma berdaun lebar (broadleaf). Gulma ini didominasi oleh tumbuhan dikotil, dan beberapa diantaranya termasuk kedalam monokotil.\r\n                        </li>\r\n                        <li>\r\n                            Gulma rumput-rumputan (grasses). Merupakan kelompok Graminae dengan ciri-ciri tulang daun sejajar dengan tulang daun utama, perbedaan panjang dan lebar daun sangat jelas. Gulma ini juga dikenal dengan gulma berdaun pita.\r\n                        </li>\r\n                        <li>\r\n                            Gulma teki (sedges). Kelompok gulma dari famili Cyperaceae dengan penampang batang berbentuk segitiga.\r\n                        </li>\r\n                        <li>\r\n                            Gulma paku-pakuan atau pakis-pakisan (fern). Terdiri dari tumbuhan Pteridophyta.\r\n                        </li>\r\n                    </ol>\r\n                </li>\r\n            </ol>\r\n        </li>\r\n        <li>\r\n            <h2>\r\n                Permasalahan gulma di perkebunan kelapa sawit\r\n            </h2>\r\n            <p>\r\n                Dari sudut pandang budidaya tanaman, gulma menjadi masalah karena dapat menjadi pesaing utama tanaman budidaya dalam memanfaatkan nutrisi, air dan cahaya. Di perkebunan kelapa sawit, gulma umumnya menjadi pesaing kuat terutama pada kelapa sawit tahap pembibitan dan tanaman belum menghasilkan (TBM). Gulma jahat (noxious weeds) seperti Chromolaena odorata, Imperata cylindrica dan Mikania cordata telah diketahui menjadi pesaing langsung bagi kelapa sawit dan menyebabkan kehilangan hasil sehingga harus dikendalikan secara tuntas (Turner & Gillbanks, 1974; Lam et al., 1993; Pride, 2010). Gulma juga menjadi kompetitor utama terhadap kacangan penutup tanah (legume cover crop, LCC). Oleh karena itu, pengelolaan gulma umumnya lebih intensif dilakukan sejak persiapan lahan hingga tahap TBM kelapa sawit. Gulma yang tidak dikendalikan dapat menyebabkan pertumbuhan kelapa sawit terganggu. Sebagai contoh, kelapa sawit yang tumbuh pada areal dengan alang-alang (I. cylindrica) pada umumnya akan mengalami kekerdilan (Pride, 2010). Beberapa gulma seperti I. cylindrica dan C. odorata juga diketahui memproduksi senyawa alelopati yang dapat mengganggu pertumbuhan kelapa sawit dan tumbuhan lain (Ambika, 2002; Corley & Tinker, 2003). Keberadaan gulma juga dapat mempersulit proses panen. Gulma epifit seperti Ficus benjamina, Asplenium nidus, dan Syngodium spp. bila tidak dikendalikan akan mempersulit proses panen tandan buah segar (TBS). Keberadaan gulma epifit juga dapat menyebabkan berondolan tersangkut dan membentuk individu kelapa sawit baru (tukulan). Sementara itu, keberadaan gulma di piringan yang tidak terkendali akan mempersulit proses pengumpulan berondolan. Di perkebunan lahan gambut, gulma seperti Salvinia molesta dan Eichornia crassipes dapat menyebabkan permasalahan dalam tata kelola air. Di sisi lain, gulma dapat berperan sebagai inang alternatif berbagai hama dan penyakit kelapa sawit. Beberapa jenis gulma seperti Melastoma malabathricum, Mikania micrantha, Asystasia gangetica var. micrantha, Axonopus compressus dan Nephrolepis biserrata menjadi inang alternatif hama ulat kantung Clania sp. (Rozziansha et al., 2013). Gulma epifit seperti A. nidus juga terindikasi menjadi inang alternatif bagi rayap (Priwiratama & Rozziansha, 2012), sedangkan Curvularia sp. yang merupakan penyebab penyakit bercak daun di pembibitan kelapa sawit juga dapat dijumpai pada beberapa jenis gulma berdaun sempit. Gulma di perkebunan kelapa sawit telah dilaporkan meyebabkan kehilangan hasil yang cukup tinggi. Mikania micrantha diketahui menyebabkan kehilangan hasil hingga 20% selama lima tahun pada kelapa sawit (Gray & Hew, 1968). Pada penelitian lainnya, pengendalian terhadap gulma rerumputan Ischaemum muticum berkorelasi terhadap peningkatan bobot TBS dalam kurun waktu tiga tahun (Teo et al., 1990). Di Indonesia, kerugian yang disebabkan akibat beberapa jenis gulma juga telah dilaporkan. Infestasi M. micrantha seluas 757,5 ha pada perkebunan kelapa sawit di Provinsi Jambi menyebabkan kerugian hingga 38.1 juta rupiah. Sementara itu, kerugian yang diakibatkan infestasi I. cylindrica seluas 1086 ha dan Paspalum conjugatum seluas 1149,9 ha berturut-turut sebesar 59.9 dan 43.4 juta rupiah (Wibawanti, 2013).\r\n            </p>\r\n        </li>\r\n    </ol>\r\n</div>) \r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport default function KataPengantar(){\r\n    return (<div className=\"pengantar\">\r\n            <h1>        \r\n                Kata Pengantar\r\n            </h1>\r\n            <p>\r\n                Gulma merupakan tumbuhan pengganggu yang keberadaannya tidak dapat dipisahkan dari pembudidayaan tanaman, termasuk kelapa sawit. Keberadaannya di lapangan perlu dimonitor secara berkala untuk menghindari pertumbuhan yang berlebihan sehingga mengganggu pertumbuhan kelapa sawit. Di perkebunan kelapa sawit, meskipun gulma pada umumnya bersifat merugikan, namun pada kondisi lapangan cukup banyak gulma yang bermanfaat, terutama untuk konservasi musuh alami serangga hama kelapa sawit. Oleh karena itu, pengendaliannya di lapangan perlu dilakukan secara bijak, efektif dan efisien.\r\n            </p>\r\n            <p>\r\n                Pengendalian gulma yang efektif dan efisien akan dicapai apabila praktisi kelapa sawit, terutama petugas di lapangan, mampu mengidentifikasi secara tepat jenis-jenis gulma di lapangan dan menentukan teknik pengendalian yang sesuai dengan kondisi di lapangan. Buku “Gulma Kelapa Sawit di Indonesia: Jenis dan Pengendaliannya” menyajikan informasi mengenai jenis-jenis gulma yang umum dijumpai di perkebunan kelapa sawit di Indonesia dan penting untuk diketahui. Buku ini disusun secara sistematik, dilengkapi dengan foto-foto gulma sebagai panduan identifikasi dan disajikan dengan bahasa umum yang mudah dimengerti oleh seluruh kalangan. Informasi mengenai teknik pengendalian gulma terpadu di perkebunan kelapa sawit juga turut disertakan dalam buku ini.\r\n            </p>\r\n            <p>\r\n                Kami berharap buku ini dapat bermanfaat bagi seluruh praktisi perkebunan kelapa sawit terutama dalam proses identifikasi dan pengendalian gulma. Kami mengucapkan terima kasih pada seluruh pihak yang telah berpartisipasi dalam proses penyusunan buku ini. Saran dan kritik yang membangun akan senantiasa kami terima untuk pengembangan dan penyempurnaan buku ini di masa mendatang. \r\n            </p>\r\n            <p>\r\n                Penulis\r\n            </p>\r\n    </div>) \r\n}","import React from 'react';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nexport default function LandingPage(){\r\n    return (<div>\r\n    <LinkContainer to={\"/home\"} className=\"link\">\r\n        <img alt=\"buku gulma cover\" className=\"cover\" src=\"./cover.jpg\"/>\r\n        </LinkContainer>\r\n    </div>) \r\n}","import React from 'react';\r\n\r\nexport default function Footer(){\r\n    return (<div className=\"footer\">\r\n        2020,  W. Purba & S. Löbrich\r\n    </div>)\r\n}","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"./Auth\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { authTokens } = useAuth();\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          authTokens ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect to={{ pathname: \"/login\", state: { referer: props.location } }} />\r\n          )\r\n        }\r\n      />\r\n    );\r\n}","// jshint esversion:6\n\n\nimport React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./views/Home\";\nimport Login from \"./components/Login\";\nimport Detail from './views/Detail';\nimport EditGulma from './views/EditGulma';\nimport Overview from './views/Overview';\nimport KataPengantar from './views/KataPengantar';\nimport LandingPage from './views/LandingPage';\nimport Footer from './components/Footer';\nimport { AuthContext } from \"./context/Auth\";\nimport PrivateRoute from './context/PrivateRoute';\n\nfunction App() {\n\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\n  const [authTokens, setAuthTokens] = useState(existingTokens);\n  \n  function setTokens(data) {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  }\n\n  return (\n    <div className=\"App\">\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n    <Router basename=\"/bukugulma\">\n      <Header/>\n      <Switch>\n        <Route path='/' exact component={LandingPage}/>\n        <Route path='/home' component={Home}/>\n        <Route path='/login' component={Login}/>\n        <Route path='/overview' component={Overview}/>\n        <Route path='/kataPengantar' component={KataPengantar}/>\n        <PrivateRoute path='/edit/:plantname' component={EditGulma}/>\n        <Route path=\"/:plantname\" component={Detail}>\n        </Route>\n      </Switch>\n      <Footer/>\n    </Router>\n    </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}